version: '2'

services:
  # Before building any of these containers; please run
  # docker-compose -f docker-compose.build.yml build
  # as that will build the base images

  # HBase is here...
  zookeeper:
    image: karlstoney/hbase
    build: ./hbase
    restart: always
    hostname: hbase-zookeeper
    container_name: hbase-zookeeper
    command: hbase zookeeper start
    mem_limit: 512m
    memswap_limit: 1g
    ports:
      - 17003:2181
    env_file:
      - ./stack.env

  regionserver:
    image: karlstoney/hbase
    build: ./hbase
    restart: always
    hostname: hbase-regionserver
    container_name: hbase-regionserver
    command: hbase regionserver start
    mem_limit: 512m
    memswap_limit: 1g
    ports:
      - 17002:16030 
    env_file:
      - ./stack.env

  master:
    image: karlstoney/hbase
    build: ./hbase
    restart: always
    hostname: hbase-master
    container_name: hbase-master
    command: hbase master start
    mem_limit: 512m
    memswap_limit: 1g
    environment:
      - HBASE_CONF_QUORUM=hbase-zookeeper
      - HBASE_CONF_ROOTDIR=hdfs://namenode:8020/hbase
      # docker-compose networking is flakey, I've added a script
      # which does DNS looking for any HOST_ENTRY_* ENV variables
      # and adds it to the hostfile for the container, thus bypassing 
      # the DNS lookup which adds the project network name
      - HOST_ENTRY_1=hbase-regionserver
    ports:
      - 17001:16010 

  thrift:
    image: karlstoney/hbase
    build: ./hbase
    restart: always
    hostname: hbase-thrift
    container_name: hbase-thrift
    command: hbase thrift start -t 5000 -p 9090
    mem_limit: 1g
    memswap_limit: 2g
    ports:
      - 17004:9095   # UI
    env_file:
      - ./stack.env

  rest:
    image: karlstoney/hbase
    build: ./hbase
    restart: always
    hostname: hbase-rest
    container_name: hbase-rest
    command: hbase rest start 
    mem_limit: 512m
    memswap_limit: 2g
    ports:
      - 17005:8080   # api
    env_file:
      - ./stack.env
